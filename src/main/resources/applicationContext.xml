<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd"
	default-lazy-init="true">

	<context:spring-configured />
	<context:component-scan base-package="com.github.catstiger.auth" />
	<context:component-scan base-package="com.github.catstiger.core" />
	<context:property-placeholder location="classpath*:*.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="initialSize" value="${pool.initialSize}" />
		<property name="minIdle" value="${pool.minIdle}" />
		<property name="maxActive" value="${pool.maxActive}" />

		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="${pool.pingQuery}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<property name="filters" value="stat" />
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<task:annotation-driven proxy-target-class="true" />

	<!-- Redis -->
	<bean id="redissonClient" class="org.redisson.Redisson"
		factory-method="create" destroy-method="shutdown">
		<constructor-arg>
			<bean class="com.github.catstiger.core.redis.RedissonConfigFactoryBean">
				<!-- 配置Redis链接信息 -->
				<property name="configLocation" value="classpath:redis.properties" />
				<!-- 配置文件中，各个key的前缀 -->
				<property name="prefix" value="redis"></property>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="cacheManager"
		class="com.github.catstiger.core.redis.RedissonCacheManagerFactoryBean">
		<property name="redissonClient" ref="redissonClient" />
		<!-- 配置不同Name的Cache中数据的过期时间和最大空闲时间 -->
		<property name="cacheConfig" value="classpath:redis.properties" />
		<!-- 配置文件中各个key，也就是cache name的前缀 -->
		<property name="cacheNamePrefx" value="expiry"></property>
	</bean>
	<cache:annotation-driven proxy-target-class="true"
		cache-manager="cacheManager" />

</beans>